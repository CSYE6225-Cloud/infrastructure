AWSTemplateFormatVersion: "2010-09-09"
Description: CSYE 6225
Parameters:
  Domain:
    Description: "tld domain"
    Type: String
    Default: ""
  EnvironmentType:
    Description: "Environment type"
    Type: String
    Default: "dev"
  DeployGroupName:
    Description: "Deploy Group Name"
    Type: String
    Default: "csye6225-webapp-deployment"
  ApplicationName:
    Description: "Application Name"
    Type: String
    Default: "csye6225-webapp"
  S3BucketName:
    Description: "S3 Bucket Name"
    Type: String
    Default: "csye6225-webapp-codedeployment"
  UserName:
    Description: "User Name"
    Type: String
    Default: "ghactions-app"
  LambdaFunctionName:
    Description: "Lambda Function Name"
    Type: String
    Default: "user-create-verification"

Conditions:
  UseProdCondition:
    !Equals [!Ref EnvironmentType, dev]

Resources:
  myGhUploadToS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: GH-Upload-To-S3
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 's3:Get*'
              - 's3:List*'
              - 's3:PutObject'
            Resource:
              - !Sub 
                - '${PREFIX}${S3BucketName}.${SUBDOMAIN}.${DOMAIN}'
                - PREFIX: 'arn:aws:s3:::'
                  S3BUCKETNAME: !Ref S3BucketName
                  SUBDOMAIN: !If [UseProdCondition, 'dev', 'prod']
                  DOMAIN: !Ref Domain
              - !Sub 
                - '${PREFIX}${S3BucketName}.${SUBDOMAIN}.${DOMAIN}/*'
                - PREFIX: 'arn:aws:s3:::'
                  S3BUCKETNAME: !Ref S3BucketName
                  SUBDOMAIN: !If [UseProdCondition, 'dev', 'prod']
                  DOMAIN: !Ref Domain
      Roles: 
        - !Ref myGhCodeDeployServiceRole
      Users:
        - !Ref UserName
  
  myGhCodeDeployPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: GH-Code-Deploy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'codedeploy:RegisterApplicationRevision'
              - 'codedeploy:GetApplicationRevision'
            Resource: 
              - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:application:${ApplicationName}'
          - Effect: Allow
            Action:
              - 'codedeploy:CreateDeployment'
              - 'codedeploy:GetDeployment'
            Resource: 
              - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ApplicationName}/${DeployGroupName}'
          - Effect: Allow
            Action:
              - 'codedeploy:GetDeploymentConfig'
            Resource: 
              - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.OneAtATime'
              - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.HalfAtATime'
              - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.AllAtOnce'
      Roles: 
        - !Ref myGhCodeDeployServiceRole
      Users:
        - !Ref UserName

  myGhCodeDeployServiceRole: 
    Type: AWS::IAM::Role
    Properties: 
      RoleName: GhCodeDeployServiceRole
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: 
                - !Sub "codedeploy.${AWS::Region}.${AWS::URLSuffix}"
              AWS:
                - !Ref AWS::AccountId
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Tags: 
        - Key: Name
          Value: !Ref AWS::StackName

  myGhUploadToLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: GH-Upload-To-Lambda
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'lambda:UpdateFunctionCode'
            Resource:
              - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunctionName}'
      Roles: 
        - !Ref myGhUploadLambdaRole
      Users:
        - !Ref UserName

  myGhUploadLambdaRole: 
    Type: AWS::IAM::Role
    Properties: 
      RoleName: GhUploadLambdaRole
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal:
              AWS:
                - !Ref AWS::AccountId
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Tags: 
        - Key: Name
          Value: !Ref AWS::StackName
